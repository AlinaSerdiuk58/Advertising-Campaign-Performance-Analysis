ith t_1 as(
select
	ad_date,
	'Facebook Ads' as media_source,
	fc.campaign_name ,
	fa.adset_name ,
	coalesce (spend,0) as spend,
	coalesce (impressions,0) as impressions,
	coalesce (reach,0) as reach,
	coalesce (clicks,0) as clicks,
	coalesce (leads,0) as leads,
	coalesce (value  ,0) as value ,
	url_parameters
from facebook_ads_basic_daily fabd
left join facebook_campaign fc on fabd.campaign_id =fc.campaign_id
left join facebook_adset fa on fabd.adset_id =fa.adset_id
where ad_date is not null
union all
select
	ad_date,
	'Google Ads' as media_source,
	campaign_name ,
	adset_name,
	coalesce (spend,0) as spend,
	coalesce (impressions,0) as impressions,
	coalesce (reach,0) as reach,
	coalesce (clicks,0) as clicks,
	coalesce (leads,0) as leads,
	coalesce (value  ,0) as value ,
	url_parameters
from google_ads_basic_daily gabd
),
 t_2 as(
SELECT
	date_trunc('MONTH' ,ad_date)::date AS ad_month,
	case when lower(substring(url_parameters,'utm_campaign=([^&#$]+)'))='nan' then 'null'
       else lower(substring(url_parameters,'utm_campaign=([^&#$]+)')) end as utm_campaign,
  sum(spend)  as total_spend_month,
  sum(impressions) as total_impressions_month,
  sum(clicks) as total_clicks_month,
  sum(value) as total_value_month,
  case when sum(impressions)>0 then round(sum(clicks)/sum(impressions::numeric)*100 ,3) else 0 end as ctr_month,
  case when sum(clicks)>0 then round(sum(spend)/sum(clicks::numeric) ,3) else 0 end as cpc_month,
  case when sum(impressions)>0 then round(sum(spend)/sum(impressions::numeric)*1000 ,3) else 0 end as cpm_month,
  case when sum(spend)>0 then round((sum(value)-sum(spend))/sum(spend::numeric)*100 ,3) else 0 end as romi_month
FROM t_1
group by 1,2
),
t_3 AS (
SELECT 
	ad_month,
	utm_campaign,
	total_spend_month,
	total_impressions_month,
	total_clicks_month,
	total_value_month,
	ctr_month,
	cpc_month,
	cpm_month,
	romi_month,
	lag(romi_month) over(partition by utm_campaign order by ad_month) as previous_month_romi,
	lag(ctr_month) over(partition by utm_campaign order by ad_month) as previous_month_ctr,
	lag(cpc_month) over(partition by utm_campaign order by ad_month) as previous_month_cpc,
	lag(cpm_month) over(partition by utm_campaign order by ad_month) as previous_month_cpm
	from t_2
)
SELECT 
	ad_month,
	utm_campaign,
	romi_month,
CASE WHEN romi_month>0  THEN round(previous_month_romi-romi_month,3) ELSE 0 END AS diff_romi_1m,
	ctr_month,
CASE WHEN ctr_month>0  THEN round(previous_month_ctr-ctr_month,3) ELSE 0 END AS diff_ctr_1m,
	cpc_month,
CASE WHEN cpc_month>0  THEN round((previous_month_cpc-cpc_month)/cpc_month ,3) ELSE 0 END AS diff_cpc_1m,
	cpm_month,
CASE WHEN cpm_month>0  THEN round((previous_month_cpm-cpm_month)/cpm_month ,3) ELSE 0 END AS diff_cpm_1m
from t_3
;
